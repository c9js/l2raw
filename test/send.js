/*▄────────────────────▄
  █                    █
  █  Загрузка модулей  █
  █                    █
  ▀────────────────────▀*/
require('core'); // Ядро
const { Sender } = require('..'); // Работа с RAW-пакетами на уровне L2

/*┌────────────────────┐
  │ Создаем передатчик │
  └────────────────────┘*/
const sender = new Sender({
    iface:    'eth0', // Имя сетевого интерфейса
    delay:      1000, // Задержка между пакетами  = 1 сек
    delayError: 3000, // Задержка после ошибки    = 3 сек
    timeout:    5000, // Время на отправку пакета = 5 сек
});

/*┌──────────────────────────────────────────────────────────────┐
  │ Добавляем обработчик отправки пакетов на указанный MAC-адрес │
  └──────────────────────────────────────────────────────────────┘*/
sender.on('data', (packetBuffer, macBuffer) => {
    _=`Пакет отправлен: ${packetBuffer.length} (send)`
    _=`MAC-адрес получателя: ${macBuffer.toString('hex')}`
    _=packetBuffer.toString('hex')
    _='---'
});

/*┌────────────────────────────────────────┐
  │ Добавляем обработчик обновления пакета │
  └────────────────────────────────────────┘*/
sender.on('update', (packetBuffer) => {
    _=`Пакет обновлен: ${packetBuffer.length} (update)`
    _=packetBuffer.toString('hex')
});

/*┌────────────────────────────────────────────┐
  │ Добавляем обработчик обновления MAC-адреса │
  └────────────────────────────────────────────┘*/
sender.on('updateMac', (macBuffer) => {
    _=`MAC-адрес обновлен: ${macBuffer.toString('hex')} (updateMac)`
});

/*┌─────────────────────────────┐
  │ Добавляем обработчик ошибок │
  └─────────────────────────────┘*/
sender.on('error', (err) => {
    _='Ошибка!'
    _=err
});

/*┌──────────────────────────────┐
  │ Добавляем обработчик запуска │
  └──────────────────────────────┘*/
sender.on('start', (isStartPacket) => {
    _='Запуск!'
    
    if (!isStartPacket) {
        _='Стартовый пакет еще не задан!'
    }
});

/*┌────────────────────────────────┐
  │ Добавляем обработчик остановки │
  └────────────────────────────────┘*/
sender.on('stop', () => {
    _='Остановка!'
});

/*┌──────────────────────────────────────────┐
  │ Обработчик аварийного завершения воркера │
  └──────────────────────────────────────────┘*/
sender.on('exit', (code) => {
    _=`Аварийное завершение воркера! Код выхода: ${code}`
});

/*┌──────────────────────────────────┐
  │ Добавляем обработчик перезапуска │
  └──────────────────────────────────┘*/
sender.on('restart', (reason) => {
    _=`Перезапуск передатчика... Причина: ${reason}`
});

/*┌───────────────────────────────┐
  │ Добавляем обработчик таймаута │
  └───────────────────────────────┘*/
sender.on('timeout', () => {
    _='Превышено время на отправку пакета!'
});

/*┌────────────────────────────────────────┐
  │ Обновляем пакет для следующей отправки │
  └────────────────────────────────────────┘*/
setTimeout(f => {
    sender.update(Buffer.from('0000000000001234', 'hex'));
}, 0);

/*┌───────────────────────────────────────────────────────┐
  │ Инициализируем начальный пакет для следующей отправки │
  └───────────────────────────────────────────────────────┘*/
sender.update(Buffer.from('1122334455667799', 'hex'));

/*┌─────────────────────────────────────────────────────────────────┐
  │ Пример для тестирования отправки пакетов на указанный MAC-адрес │
  └─────────────────────────────────────────────────────────────────┘*/
// sender.updateMac(Buffer.from('223344556677', 'hex'));  // Обновляем MAC-адрес получателя
// sender.update(Buffer.from('0000000000004321', 'hex')); // Обновляем пакет для следующей отправки

/*┌────────────────────────────────────────┐
  │ Пример для тестирования полного пакета │
  │ Размер пакета 1508 байт                │
  │ Все байты кроме последнего равны 00    │
  │ Последний байт равен FF                │
  │ Так будет легко отследить конец пакета │
  │ 0000000000000000......00000000000000FF │
  └────────────────────────────────────────┘*/
// sender.update(Buffer.alloc(1508).fill(0xFF, 1507));

/*┌────────────────────────────────────────────┐
  │ Список примеров для тестирования на ошибки │
  └────────────────────────────────────────────┘*/
// sender.update([1,2,[1,2,[1,2]]]);  // Тип пакета должен быть Buffer!
// sender.update(Buffer.alloc(7));    // Размер пакета должен быть минимум 8 байт!
// sender.update(Buffer.alloc(1509)); // Размер пакета должен быть максимум 1508 байт!
