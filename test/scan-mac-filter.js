/*▄────────────────────▄
  █                    █
  █  Загрузка модулей  █
  █                    █
  ▀────────────────────▀*/
require('core'); // Ядро
const { Scanner } = require('..'); // Работа с RAW-пакетами на уровне L2

/*┌──────────────────┐
  │ Создаем приемник │
  └──────────────────┘*/
const scanner = new Scanner({
    iface:    'eth0', // Имя сетевого интерфейса
    delay:       100, // Задержка между пакетами   = 0.1 сек
    delayError: 3000, // Задержка после ошибки     =   3 сек
    timeout:    5000, // Время на получение пакета =   5 сек
});

/*┌────────────────────────────────────────────────────────────────────┐
  │ Добавляем обработчик получения пакетов с фильтрацией по MAC-адресу │
  └────────────────────────────────────────────────────────────────────┘*/
scanner.on('data', (packetBuffer, packet, macFilter) => {
// Создаем MAC-адрес для фильтрации пакетов (22:33:44:55:66:77)
    const macBuffer = Buffer.from('223344556677', 'hex');
    
// Фильтруем пакеты по MAC-адресу (получаем пакеты только от заданного MAC-адреса)
    if (!macFilter(packet, macBuffer)) return;
    
// Выводим в консоль
    _=`Пакет получен: ${packetBuffer.length}`
    _=`MAC-адрес (фильтр): ${macBuffer.toString('hex')}`
    _=packetBuffer.toString('hex')
    _='---'
});
